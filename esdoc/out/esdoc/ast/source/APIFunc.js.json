{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "request",
          "range": [
            465,
            472
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 16
            },
            "end": {
              "line": 13,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "method",
            "range": [
              473,
              479
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 24
              },
              "end": {
                "line": 13,
                "column": 30
              }
            }
          },
          {
            "type": "Identifier",
            "name": "path",
            "range": [
              481,
              485
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 32
              },
              "end": {
                "line": 13,
                "column": 36
              }
            }
          },
          {
            "type": "Identifier",
            "name": "data",
            "range": [
              487,
              491
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 38
              },
              "end": {
                "line": 13,
                "column": 42
              }
            }
          },
          {
            "type": "Identifier",
            "name": "accessToken",
            "range": [
              493,
              504
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 44
              },
              "end": {
                "line": 13,
                "column": 55
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "headerChange",
              "range": [
                506,
                518
              ],
              "loc": {
                "start": {
                  "line": 13,
                  "column": 57
                },
                "end": {
                  "line": 13,
                  "column": 69
                }
              }
            },
            "right": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "ObjectPattern",
                "properties": [],
                "range": [
                  521,
                  523
                ],
                "loc": {
                  "start": {
                    "line": 13,
                    "column": 72
                  },
                  "end": {
                    "line": 13,
                    "column": 74
                  }
                }
              },
              "right": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "range": [
                    532,
                    534
                  ],
                  "loc": {
                    "start": {
                      "line": 13,
                      "column": 83
                    },
                    "end": {
                      "line": 13,
                      "column": 85
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  526,
                  534
                ],
                "loc": {
                  "start": {
                    "line": 13,
                    "column": 77
                  },
                  "end": {
                    "line": 13,
                    "column": 85
                  }
                }
              },
              "range": [
                521,
                534
              ],
              "loc": {
                "start": {
                  "line": 13,
                  "column": 72
                },
                "end": {
                  "line": 13,
                  "column": 85
                }
              }
            },
            "range": [
              506,
              534
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 57
              },
              "end": {
                "line": 13,
                "column": 85
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "range": [
            536,
            539
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 87
            },
            "end": {
              "line": 14,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          456,
          539
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 7
          },
          "end": {
            "line": 14,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Created by priyanka on 25/4/16.\n ",
            "range": [
              0,
              42
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 3,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * request() Executes the public API's request. With the Data and URL it calls for the sendAndFollow method.\n * @param  {String} method HTTP method\n * @param  {String} path The resource's path\n * @param {object} data Data to send along with the request\n * @param {String} accessToken  Auth token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
            "range": [
              43,
              448
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * sendAndFollow() executes the public API's request. With the params passed from request(), it hits the API to get a response.\n * It parses the object data with the help of parseRequest() and parseResponse() data.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {Object}     data      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
            "range": [
              541,
              1118
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        449,
        539
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Created by priyanka on 25/4/16.\n ",
          "range": [
            0,
            42
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * request() Executes the public API's request. With the Data and URL it calls for the sendAndFollow method.\n * @param  {String} method HTTP method\n * @param  {String} path The resource's path\n * @param {object} data Data to send along with the request\n * @param {String} accessToken  Auth token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
          "range": [
            43,
            448
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * sendAndFollow() executes the public API's request. With the params passed from request(), it hits the API to get a response.\n * It parses the object data with the help of parseRequest() and parseResponse() data.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {Object}     data      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
          "range": [
            541,
            1118
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "sendAndFollow",
          "range": [
            1135,
            1148
          ],
          "loc": {
            "start": {
              "line": 26,
              "column": 16
            },
            "end": {
              "line": 26,
              "column": 29
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "method",
            "range": [
              1149,
              1155
            ],
            "loc": {
              "start": {
                "line": 26,
                "column": 30
              },
              "end": {
                "line": 26,
                "column": 36
              }
            }
          },
          {
            "type": "Identifier",
            "name": "url",
            "range": [
              1157,
              1160
            ],
            "loc": {
              "start": {
                "line": 26,
                "column": 38
              },
              "end": {
                "line": 26,
                "column": 41
              }
            }
          },
          {
            "type": "Identifier",
            "name": "data",
            "range": [
              1162,
              1166
            ],
            "loc": {
              "start": {
                "line": 26,
                "column": 43
              },
              "end": {
                "line": 26,
                "column": 47
              }
            }
          },
          {
            "type": "Identifier",
            "name": "accessToken",
            "range": [
              1168,
              1179
            ],
            "loc": {
              "start": {
                "line": 26,
                "column": 49
              },
              "end": {
                "line": 26,
                "column": 60
              }
            }
          },
          {
            "type": "Identifier",
            "name": "headerChange",
            "range": [
              1181,
              1193
            ],
            "loc": {
              "start": {
                "line": 26,
                "column": 62
              },
              "end": {
                "line": 26,
                "column": 74
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "range": [
            1195,
            1198
          ],
          "loc": {
            "start": {
              "line": 26,
              "column": 76
            },
            "end": {
              "line": 27,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1126,
          1198
        ],
        "loc": {
          "start": {
            "line": 26,
            "column": 7
          },
          "end": {
            "line": 27,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * sendAndFollow() executes the public API's request. With the params passed from request(), it hits the API to get a response.\n * It parses the object data with the help of parseRequest() and parseResponse() data.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {Object}     data      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
            "range": [
              541,
              1118
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * parseRequest() parses the public API's request. It stringifies the object data.\n * @param  {object} data The original XMLHttpRequest\n * @return {String}  Stringify the original XMLHttpRequest\n ",
            "range": [
              1200,
              1402
            ],
            "loc": {
              "start": {
                "line": 29,
                "column": 0
              },
              "end": {
                "line": 33,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1119,
        1198
      ],
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * sendAndFollow() executes the public API's request. With the params passed from request(), it hits the API to get a response.\n * It parses the object data with the help of parseRequest() and parseResponse() data.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {Object}     data      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
          "range": [
            541,
            1118
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * parseRequest() parses the public API's request. It stringifies the object data.\n * @param  {object} data The original XMLHttpRequest\n * @return {String}  Stringify the original XMLHttpRequest\n ",
          "range": [
            1200,
            1402
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "parseRequest",
          "range": [
            1419,
            1431
          ],
          "loc": {
            "start": {
              "line": 34,
              "column": 16
            },
            "end": {
              "line": 34,
              "column": 28
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "data",
            "range": [
              1432,
              1436
            ],
            "loc": {
              "start": {
                "line": 34,
                "column": 29
              },
              "end": {
                "line": 34,
                "column": 33
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "range": [
            1438,
            1441
          ],
          "loc": {
            "start": {
              "line": 34,
              "column": 35
            },
            "end": {
              "line": 35,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1410,
          1441
        ],
        "loc": {
          "start": {
            "line": 34,
            "column": 7
          },
          "end": {
            "line": 35,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * parseRequest() parses the public API's request. It stringifies the object data.\n * @param  {object} data The original XMLHttpRequest\n * @return {String}  Stringify the original XMLHttpRequest\n ",
            "range": [
              1200,
              1402
            ],
            "loc": {
              "start": {
                "line": 29,
                "column": 0
              },
              "end": {
                "line": 33,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * sendRequest() executes the public API's request and returns the response.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {String}     requestData      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
            "range": [
              1443,
              1889
            ],
            "loc": {
              "start": {
                "line": 37,
                "column": 0
              },
              "end": {
                "line": 45,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1403,
        1441
      ],
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * parseRequest() parses the public API's request. It stringifies the object data.\n * @param  {object} data The original XMLHttpRequest\n * @return {String}  Stringify the original XMLHttpRequest\n ",
          "range": [
            1200,
            1402
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * sendRequest() executes the public API's request and returns the response.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {String}     requestData      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
          "range": [
            1443,
            1889
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "sendRequest",
          "range": [
            1906,
            1917
          ],
          "loc": {
            "start": {
              "line": 46,
              "column": 16
            },
            "end": {
              "line": 46,
              "column": 27
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "method",
            "range": [
              1918,
              1924
            ],
            "loc": {
              "start": {
                "line": 46,
                "column": 28
              },
              "end": {
                "line": 46,
                "column": 34
              }
            }
          },
          {
            "type": "Identifier",
            "name": "url",
            "range": [
              1926,
              1929
            ],
            "loc": {
              "start": {
                "line": 46,
                "column": 36
              },
              "end": {
                "line": 46,
                "column": 39
              }
            }
          },
          {
            "type": "Identifier",
            "name": "requestData",
            "range": [
              1931,
              1942
            ],
            "loc": {
              "start": {
                "line": 46,
                "column": 41
              },
              "end": {
                "line": 46,
                "column": 52
              }
            }
          },
          {
            "type": "Identifier",
            "name": "accessToken",
            "range": [
              1944,
              1955
            ],
            "loc": {
              "start": {
                "line": 46,
                "column": 54
              },
              "end": {
                "line": 46,
                "column": 65
              }
            }
          },
          {
            "type": "Identifier",
            "name": "headerChange",
            "range": [
              1957,
              1969
            ],
            "loc": {
              "start": {
                "line": 46,
                "column": 67
              },
              "end": {
                "line": 46,
                "column": 79
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "range": [
            1971,
            1974
          ],
          "loc": {
            "start": {
              "line": 46,
              "column": 81
            },
            "end": {
              "line": 47,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1897,
          1974
        ],
        "loc": {
          "start": {
            "line": 46,
            "column": 7
          },
          "end": {
            "line": 47,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * sendRequest() executes the public API's request and returns the response.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {String}     requestData      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
            "range": [
              1443,
              1889
            ],
            "loc": {
              "start": {
                "line": 37,
                "column": 0
              },
              "end": {
                "line": 45,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * parseResponse() is for parsing the response received from the request.\n * @param  {String}     responseText    The API raw response\n * @param  {XMLHttpRequest}     request       The original XMLHttpRequest\n * @return {Object({json, error})} Parses the public API's response and constructs error messages\n ",
            "range": [
              1977,
              2291
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 55,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1890,
        1974
      ],
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 47,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * sendRequest() executes the public API's request and returns the response.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {String}     requestData      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
          "range": [
            1443,
            1889
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * parseResponse() is for parsing the response received from the request.\n * @param  {String}     responseText    The API raw response\n * @param  {XMLHttpRequest}     request       The original XMLHttpRequest\n * @return {Object({json, error})} Parses the public API's response and constructs error messages\n ",
          "range": [
            1977,
            2291
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "parseResponse",
          "range": [
            2308,
            2321
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 16
            },
            "end": {
              "line": 56,
              "column": 29
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "responseText",
            "range": [
              2322,
              2334
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 30
              },
              "end": {
                "line": 56,
                "column": 42
              }
            }
          },
          {
            "type": "Identifier",
            "name": "request",
            "range": [
              2336,
              2343
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 44
              },
              "end": {
                "line": 56,
                "column": 51
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "range": [
            2345,
            2347
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 53
            },
            "end": {
              "line": 56,
              "column": 55
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2299,
          2347
        ],
        "loc": {
          "start": {
            "line": 56,
            "column": 7
          },
          "end": {
            "line": 56,
            "column": 55
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * parseResponse() is for parsing the response received from the request.\n * @param  {String}     responseText    The API raw response\n * @param  {XMLHttpRequest}     request       The original XMLHttpRequest\n * @return {Object({json, error})} Parses the public API's response and constructs error messages\n ",
            "range": [
              1977,
              2291
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 55,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        2292,
        2347
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 56,
          "column": 55
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * parseResponse() is for parsing the response received from the request.\n * @param  {String}     responseText    The API raw response\n * @param  {XMLHttpRequest}     request       The original XMLHttpRequest\n * @return {Object({json, error})} Parses the public API's response and constructs error messages\n ",
          "range": [
            1977,
            2291
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    449,
    2347
  ],
  "loc": {
    "start": {
      "line": 13,
      "column": 0
    },
    "end": {
      "line": 56,
      "column": 55
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Created by priyanka on 25/4/16.\n ",
      "range": [
        0,
        42
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * request() Executes the public API's request. With the Data and URL it calls for the sendAndFollow method.\n * @param  {String} method HTTP method\n * @param  {String} path The resource's path\n * @param {object} data Data to send along with the request\n * @param {String} accessToken  Auth token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
      "range": [
        43,
        448
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * sendAndFollow() executes the public API's request. With the params passed from request(), it hits the API to get a response.\n * It parses the object data with the help of parseRequest() and parseResponse() data.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {Object}     data      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
      "range": [
        541,
        1118
      ],
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * parseRequest() parses the public API's request. It stringifies the object data.\n * @param  {object} data The original XMLHttpRequest\n * @return {String}  Stringify the original XMLHttpRequest\n ",
      "range": [
        1200,
        1402
      ],
      "loc": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 33,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * sendRequest() executes the public API's request and returns the response.\n * @param  {String}     method    The HTTP method (GET, POST, PUT, DELETE)\n * @param  {String}     url       The resource's url\n * @param  {String}     requestData      Data to send along with the request\n * @param  {String}  accessToken  Authentication token for authentication\n * @param  {String} headerChange Parameters that will be sent\n * @return {Promise}\n ",
      "range": [
        1443,
        1889
      ],
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 45,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * parseResponse() is for parsing the response received from the request.\n * @param  {String}     responseText    The API raw response\n * @param  {XMLHttpRequest}     request       The original XMLHttpRequest\n * @return {Object({json, error})} Parses the public API's response and constructs error messages\n ",
      "range": [
        1977,
        2291
      ],
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 3
        }
      }
    }
  ]
}